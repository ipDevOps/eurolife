@using Wedia.Foundation.Alerts
@using Wedia.Foundation.Alerts.Extensions
@using Wedia.Foundation.SitecoreExtensions.Extensions
@using Wedia.Feature.Highlight
@model Sitecore.Mvc.Presentation.RenderingModel
@{
  if (!Model?.Item?.DescendsFrom(Templates.HighlightsAccordionsGroup.ID) ?? true)
  {
    @Html.PageEditorError(AlertTexts.InvalidDataSourceTemplate(Templates.HighlightsAccordionsGroup.ID), AlertTexts.InvalidDataSourceTemplateFriendlyMessage, Model.Item?.ID, Model.Rendering.Item?.ID)
    return;
  }

  var accordions = Model.Item.GetMultiListValueItems(Templates.HighlightsAccordionsGroup.Fields.Accordions);

  if (accordions == null || !accordions.Any())
  {
    return;
  }
}

<section id="highlights-accordion-group" class="p-t-64 m-b-112 relator">
  <h1 class="h4 m-b-48 t-c">@Html.Sitecore().Field(Templates.HighlightMain.Fields.Title)</h1>

  @if (Model.Item.FieldHasValue(Templates.HighlightMain.Fields.Summary) || Sitecore.Context.PageMode.IsExperienceEditor)
  {
    <p class="m-b-48 t-c center center--650">
      @Html.Sitecore().Field(Templates.HighlightMain.Fields.Summary)
    </p>
  }

  <div class="invisible anchor-200" id="highlights-accordion"></div>

  @foreach (var item in Model.Item.GetMultiListValueItems(Templates.HighlightsAccordionsGroup.Fields.Accordions).Select((value, i) => new { i, value }))
  {
    <transition name="slide">
      <app-coverages-accordion :identifier="@item.i" key="app-coverages-accordion-@item.i">
        @Html.Partial("../Highlight/HighlightsAccordionItems", item.value)
      </app-coverages-accordion>
    </transition>
  }
</section>